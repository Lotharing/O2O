<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">
    
    <!-- 1.redis连接池设置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!-- 控制一个pool可分配多个jedis实例 -->
		<property name="maxTotal" value="${redis.pool.maxActive}" />
		<!-- 连接池中最多可空闲的maxIdle连接，这里设置为20，即没有数据库连接时候，依然保持有20个空闲连接随时待命 -->
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<!-- 最大等待时间：当没有可用连接是，连接池等待被归还的最大时间（毫秒为单位），超过则抛出异常 -->
		<property name="maxWaitMillis" value="${redis.pool.maxWait}" />
		<!-- 在获取连接的时候检查有效性 -->
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>
	
    <!-- 2.创建redis连接 -->
	<bean id="jedisWritePool" class="top.lothar.o2o.cache.JedisPoolWriper" depends-on="jedisPoolConfig">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1" value="${redis.hostname}" />
		<constructor-arg index="2" value="${redis.port}" type="int" />
	</bean>
	
    <!-- 3.创建redies工具类，封装好Redis的连接以进行相关的操作 -->
	<bean id="jedisUtil" class="top.lothar.o2o.cache.JedisUtil" scope="singleton">
    	<property name="jedisPool">
    		<ref bean="jedisWritePool"/>
    	</property>
    </bean>

    <!-- 4.redis的key操作 -->
	<bean id="jedisKeys" class="top.lothar.o2o.cache.JedisUtil$Keys" scope="singleton">
    	<!-- <constructor-arg ref="jedisUtil"></constructor-arg> -->
    </bean>
    
    <!-- 5.redis的Strings操作 -->
	<bean id="jedisStrings" class="top.lothar.o2o.cache.JedisUtil$Strings" scope="singleton">
    	<!-- <constructor-arg ref="jedisUtil"></constructor-arg> -->
    </bean>
    
</beans>